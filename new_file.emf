@namespace(
	uri="http://dapr.io/daprtools/daprdesigner",
	prefix="daprdesigner")
package daprdesigner;

// Base classes

class Namespace{
	
	attr String name;
}
class Trustdomain{
	
	attr String name;
}

abstract class BuildingBlock {
	
	ref Namespace namespace;
	ref Trustdomain trustDomain;
}


// Service Invocation and Apps 
class Services extends BuildingBlock{
	
	readonly attr  String name = "Services Group";
	ref App[*] apps;
}

class App {
	attr String appId;
	ref Namespace namespace;
	ref Trustdomain trustDomain;
	val AppConfiguration configuration;
	
	
}

class AppConfiguration{
	readonly attr String apiVersion = "dapr.io/v1alpha1";
	readonly attr String kind = "Configuration";
	attr String metadata_name;
	ref Namespace metadata_namespace;
	val AppAccessControl[0..1] accessControl;
	val APIAccessControl[0..1] apiControl;
	val MiddlewareConfiguration[0..1] middlewareConfiguration;
	val LoggingConfiguration[0..1] loggingConfiguration;
	val NameResolutionConfiguration[0..1] nameResolutionConfiguration;
	val SecretsConfiguration[0..1] secretsConfiguration;
	attr String[*] componentsDenyList;
	
}
//Logging configuration

class LoggingConfiguration{
	attr boolean enabled = true;
	attr boolean obfuscateURLs = false;
	attr boolean omitHealthChecks = true;
}
//Name Resolution Configuration

class NameResolutionConfiguration{
	attr String componentName;
	attr String componentVersion;
	attr String configurationKey;
	attr String configurationValue;
	
}
//Secrets configuration

class SecretsConfiguration
{
    val SecretsList[*] allowedList;
    val SecretsList[*] deniedList;	
	
}

class SecretsList{
	attr String storeName;
	attr boolean defaultAccess = true;
	attr String[+] secrets;
	
}



// API Configuration

class APIAccessControl{
	val API[*] allowedAPIs;
	val API[*] deniedAPIs;
}

class API {
	attr String api_name;
	attr String api_version;
	attr String protocol;
}



// AccessControl configuration

class AppAccessControl{
	
	attr String defaultAction;
	ref  Trustdomain trustDomain;
	val AppPolicy[*] policies;
}

class AppPolicy {
  ref App app;
  attr String defaultAction;
  ref Trustdomain trustDomain;
  ref Namespace namespace;
  val Operation[*] operations;
  
  	
}

class Operation{
	attr String protocol;
	attr String operationName;
	attr String[*] verbs;
	attr String action;
}

// Middleware Configuration

class MiddlewareConfiguration{
	
	val HttpHandler[*] incomingHandler; // httpPipeline
	val HttpHandler[*] outgoingHandler; // appHttpPipeline  
}

class HttpHandler{
	
	attr String name;
	attr String type;
}


// Components Deny list 


//Component Definitions


abstract class Component {
	
	readonly attr String apiVersion = "dapr.io/v1alpha1";
	readonly attr String kind = "Component";
	ref SecretStore auth;
	attr String metadata_name;
	ref Namespace metadata_namespace;
	val ComponentSpec spec; 
	ref App[*] scopes;
		
}

class ComponentSpec{
	attr boolean ignoreErrors;
	attr String initTimeout;
	val SpecMetadata[*] spec_metadata; 
}

class SpecMetadata{
	attr String name;
	attr String value;
	attr boolean isFetchedFromSecret = false;
	attr boolean isFetchedFromEnvironment = false;
	attr String secretKeyRefName;
	attr String secretKeyRefKey;
	attr String envRef;
}


// Secret Stores 

abstract class SecretStore extends Component  {
	
	
}

class HashicorpVault extends SecretStore{
	
	readonly attr String spec_type = "secretstores.aws.parameterstore";
	readonly attr String spec_version = "v1";
}

// Message Broker Configurations 

abstract class MessageBroker extends Component{
	
}




class PubSub extends BuildingBlock{
	
	readonly attr  String name = "Message Brokers";
	ref MessageBroker[*] mbrokers;
}



class Bindings extends BuildingBlock{
	
	attr String appID;
}
class Jobs extends BuildingBlock{
	
	attr String appID;
}
class Configuration extends BuildingBlock{
	
	attr String appID;
}
class Workflow extends BuildingBlock{
	
	attr String appID;
}
class Actors extends BuildingBlock{
	
	attr String appID;
}
class Secrets extends BuildingBlock{
	
	attr String appID;
}
class StateManagement extends BuildingBlock{
	
	attr String appID;
}

class DistributedLocks extends BuildingBlock{
	
	attr String appID;
}
class CryptoGraphy extends BuildingBlock{
	
	attr String appID;
}




